package pages

import (
	"fmt"
)

var shadowColor = "257deg 1% 0%"
var backgroundPrimary = "rgba(2,0,36,1)"
var backgroundSecondary = "rgba(0,0,0,1)"

css grid() {
	border-radius: 0.75rem;
	max-width: 80vw;
	min-width: 60vw;
	height: auto;
	image-rendering: pixelated;
	user-select: none;
}

css body() {
	background: { templ.SafeCSSProperty(backgroundPrimary) };
	background: { templ.SafeCSSProperty(fmt.Sprintf("radial-gradient(circle, %s 0%%, %s 100%%)", backgroundPrimary, backgroundSecondary)) };
	background-repeat: no-repeat;
	background-attachment: fixed;
	height: 100%;
}

css text() {
	margin: 0.75rem;
}

css content() {
	max-width: fit-content;
	margin-inline: auto;
	background: #DDDDDD;
	margin-top: 3rem;
	padding: 0.75rem;
	border-radius: 1.5rem;
	box-shadow: { templ.SafeCSSProperty(fmt.Sprintf(
 "0.2px 0.5px 0.5px hsl(%s / 0.45), 1.1px 2.4px 2.7px -0.5px hsl(%s / 0.42), 2.1px 4.6px 5.1px -0.9px hsl(%s / 0.4), 3.8px 8.2px 9.1px -1.4px hsl(%s / 0.37), 6.5px 14px 15.5px -1.9px hsl(%s / 0.34), 10.6px 23.1px 25.5px -2.4px hsl(%s / 0.31), 16.7px 36.3px 40.2px -2.8px hsl(%s / 0.29), 25.2px 54.7px 60.5px -3.3px hsl(%s / 0.26)", 
 shadowColor, 
 shadowColor, 
 shadowColor, 
 shadowColor, 
 shadowColor,
 shadowColor,
 shadowColor,
 shadowColor)) };
}

css inputRow() {
	width: 100%;
}

css radio() {
	position: absolute;
	opacity: 0;
	cursor: pointer;
}

css check(color string) {
	position: absolute;
	top: 0;
	left: 0;
	height: 50px;
	width: 50px;
	background-color: { fmt.Sprintf("#%s", color) };
	border: { fmt.Sprintf("3px solid #%s", color) };
	border-radius: 50%;
	transition: all 0.16s;
}

css radioLabel() {
	text-indent: -1000px;
	overflow: hidden;
	display: inline-block;
	padding-left: 58px;
	padding-bottom: 56px;
	position: relative;
	cursor: pointer;
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
}

templ statsTable() {
	<table>
		<thead>
			<tr>
				<th>Stat</th>
				<th>Total</th>
				<th>Last Second</th>
			</tr>
		</thead>
		<tbody>
			<tr>
				<td>Pixels changed in main</td>
				<td id="pixelCounter">Loading...</td>
				<td id="pixelCounterAvg">Loading...</td>
			</tr>
			<tr>
				<td>Pixels changed in icon</td>
				<td id="iconCounter">Loading...</td>
				<td id="iconCounterAvg">Loading...</td>
			</tr>
		</tbody>
	</table>
	<table>
		<tbody>
			<tr>
				<td>Clients Connected</td>
				<td id="clientCounter">Loading...</td>
			</tr>
		</tbody>
	</table>
}

templ colorInput(color string, _ string) {
	<label class={ radioLabel() }>
		<input type="radio" name="color" class={ radio() } value={ color }/>
		<span class={ check(color) }></span>
	</label>
}

templ sizeInput(size string) {
	<label class={ radioLabel() }>
		<input type="radio" name="size" value={ size } class={ radio() }/>
		<span class={ check("ff00ff") }></span>
	</label>
}

templ Index(port string) {
	<!DOCTYPE html>
	<html lang="nl">
		<head>
			<title>Flutties</title>
			<link id="favicon" rel="icon" href="/icon"/>
			<script src="/icoflut.js"></script>
		</head>
		<body class={ body() }>
			<div class={ content() }>
				<img class={ grid() } onpointerdown="StartDrawing(event)" onpointerup="StopDrawing()" src="/grid" draggable="false"/>
				<div class={ inputRow() }>
					@colorInput("000000", "black")
					@colorInput("ff0000", "red")
					@colorInput("00ff00", "green")
					@colorInput("0000ff", "blue")
					@colorInput("ffffff", "white")
				</div>
				<div class={ inputRow() }>
					@sizeInput("1")
					@sizeInput("2")
					@sizeInput("4")
					@sizeInput("8")
					@sizeInput("16")
					@sizeInput("32")
					@sizeInput("64")
				</div>
				<p class={ text() }>this pixelflut is accessible on port { port }</p>
				@statsTable()
			</div>
		</body>
	</html>
}
